# Multi-stage build for metrics collector
FROM python:3.11-slim as base

# Install system dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy requirements
COPY requirements/base.txt requirements/base.txt
RUN pip install --no-cache-dir -r requirements/base.txt

# Install monitoring-specific dependencies
RUN pip install --no-cache-dir \
    prometheus-client==0.19.0 \
    flask==3.0.0 \
    psutil==5.9.6 \
    requests==2.31.0 \
    numpy==1.24.3 \
    pandas==2.0.3

# Development stage
FROM base as development

# Copy source code
COPY src/ src/
COPY config/ config/

# Set Python path
ENV PYTHONPATH=/app

# Expose metrics port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Default command
CMD ["python", "-m", "src.monitoring.collector"]

# Production stage
FROM base as production

# Copy only necessary files
COPY src/monitoring/ src/monitoring/
COPY src/common/ src/common/
COPY config/ config/

# Set Python path
ENV PYTHONPATH=/app

# Create non-root user
RUN useradd --create-home --shell /bin/bash metrics
USER metrics

# Expose metrics port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Default command
CMD ["python", "-m", "src.monitoring.collector"]